import{s as C,n as k}from"../chunks/scheduler.aZkp7-Oh.js";import{S,i as T,c as p,s as g,e as w,a as u,b as d,d as _,g as $,f as x,m as h,h as o,t as f,j as y,k as c,l as v}from"../chunks/index.BjHDo8vW.js";import{N as D,F as P}from"../chunks/footer.D8G8dr8n.js";function R(b){let a,r,e,m=`<article class="section !mt-0 !md:mt-20"><div><div class="text-center"><h4 class="smalltitle">hey - i&#39;m glad that you&#39;re here.</h4> <p class="small-paragraph-text">Thanks for clicking. Your time is valuable, so I&#39;ll keep it short.</p> <hr class="mt-8"/></div> <div class="paragraph-container"><h4 class="smallsub">Me</h4> <ul class="small-paragraph ml-12"><li class="my-1">Brendon Tsim - BSc Computer Science graduate @ The University of British Columbia</li> <li class="my-1"><strong>3x Internships (~1.25yr)</strong> (Full Stack, Web Dev, Embedded, IoT, Backend) + Freelance (Game Dev)</li> <li class="my-1">3x TA in low-level courses (Models of Computation, Computer Systems, Computer Hardware &amp; OS)</li> <li class="my-1">Distributed Systems, Parallel Computing, Computer Networking, and Machine Learning</li></ul></div> <div class="paragraph-container"><h4 class="smallsub">Internships</h4> <ul class="small-paragraph ml-12"><li class="my-1"><strong class="text-sky-600 underline">Arista Networks:</strong> Contributed to <a class="link" href="https://github.com/sonic-net" target="_blank">SONiC</a>, an open-source network OS using C++ and Python.</li> <li class="my-1"><strong class="text-yellow-500 underline">Alida:</strong> Created components for web application in TypeScript, React, C#. Ensured A11Y compliance.
                    </li><li class="my-1"><strong class="text-yellow-600 underline">Kai Shing:</strong> Automated manual processes &amp; enabled data collection for IoT devices in Java &amp; Python.</li></ul> <p class="small-paragraph"><strong>Technologies Used:</strong> C, C#, C++, Python, TypeScript, Java, React</p></div> <div class="paragraph-container"><h4 class="smallsub">Technical Projects</h4> <ul class="small-paragraph ml-12"><li class="my-1"><strong>[DistSys]</strong> Implemented Raft, a distributed systems consensus protocol as described in ATC2014 paper. Created fault-tolerant KV server and sharding logic using Raft as protocol in Go (Golang).</li> <li class="my-1"><strong>[ML/CV]</strong> Created Japanese coin counter CV model from scratch using YOLOV8 and Python. Implemented tool using Hough Circle Transform to help labelling process.</li> <li class="my-1"><strong>[WebDev]</strong> Created <a class="link" href="https://www.hashbot.io/">hashbot.io</a>, a site for a Discord bot with 10M+ users in TypeScript and Next.js.
                    </li><li class="my-1"><strong>[GameDev]</strong> Worked on updates using Lua for Starship Roleplay, a ROBLOX roleplay game series with 3M+ unique game visits.</li></ul> <p class="small-paragraph"><strong>Technologies Used:</strong> Golang, TypeScript, Python, Lua</p></div> <div class="paragraph-container"><h4 class="smallsub">Other Skills</h4> <ul class="small-paragraph ml-12"><li class="my-1"><strong>[Parallel Computing] CUDA:</strong>  Parallel Computing @ UBC, understanding CUDA internals and building a kernel.</li> <li class="my-1"><strong>[Software Verification] SPIN:</strong> Reliable Software @ Waseda, verifying software models using formal methods &amp; LTL.</li> <li class="my-1"><strong>[Multimedia]</strong> Streaming techniques incl. Video Compression, RD Optimization, WebRTC, Encoders.</li></ul></div> <div class="text-center mt-8"><hr class="mb-8"/> <p class="small-paragraph-text">Thanks for sticking through.
                        Here&#39;s my <a class="link" href="/resume" target="_blank">resume</a> for reference; If you&#39;d like to chat, reach me by my 
                        <a href="mailto:contact@brendontsim.com?subject=From brendontsim.com | [YOUR SUBJECT HERE]" class="link">email</a>.</p></div></div></article>`,n,t,i;return a=new D({props:{page:""}}),t=new P({}),{c(){p(a.$$.fragment),r=g(),e=w("div"),e.innerHTML=m,n=g(),p(t.$$.fragment),this.h()},l(s){u(a.$$.fragment,s),r=d(s),e=_(s,"DIV",{class:!0,"data-svelte-h":!0}),$(e)!=="svelte-1poscky"&&(e.innerHTML=m),n=d(s),u(t.$$.fragment,s),this.h()},h(){x(e,"class","top !mt-0")},m(s,l){h(a,s,l),o(s,r,l),o(s,e,l),o(s,n,l),h(t,s,l),i=!0},p:k,i(s){i||(f(a.$$.fragment,s),f(t.$$.fragment,s),i=!0)},o(s){y(a.$$.fragment,s),y(t.$$.fragment,s),i=!1},d(s){s&&(c(r),c(e),c(n)),v(a,s),v(t,s)}}}class M extends S{constructor(a){super(),T(this,a,null,R,C,{})}}export{M as component};
